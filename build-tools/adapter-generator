#!/usr/bin/env python3

from sys import stdin
import re

print("// File generated by adapter-generator\n")

enum = re.compile(r"enum\s+(?:\w+\s)?{")
enum_value = re.compile(r"\s*(\w+)(?:\s*=\s*(\w+))?,?")

file = stdin.read()

print(
    "#ifndef SDL_ADAPTER_H\n"
    "#define SDLSH_ADAPTER_H\n"
    "\n"
    "#include <SDL3/SDL.h>\n"
    "\n"
    "// opcodes act as indicies into this\n"
    "// array\n"
    "int opcodes_to_enums[] = {"
)

processed = {}
while True:
    enum_match = enum.search(file)
    if not enum_match:
        break

    file = file[enum_match.end():]
    while True:
        enum_value_match = enum_value.match(file)
        if not enum_value_match:
            break

        print(f"	{enum_value_match[1]},")
        file = file[enum_value_match.end():]


print(
    "};\n"
    "#endif // SDLSH_ADAPTER_H"
)
